html {
    box-sizing: border-box;
    font-size: 62.5%;
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

body {
    font-family: 'Raleway', sans-serif;
    font-size: 1.6rem;
}

img {
    max-width: 100%;
}

h1 {
    font-size: 4rem;
}

.contenedor {
    max-width: 1200px;
    width: 95%;
    margin: 0 auto;
}

.entrada-blog a {
    display: inline-block;
    background-color: #2196F3;
    color: white;
    padding: 10px 20px;
    text-decoration: none;
    font-weight: bold;
    text-transform: uppercase;
}

/** CODIGO AQUI **/

/* Para crear las dos columnas para dispositivos grandes, como no se ven dos columnas sino una sola, codificamos el ejemplo. */

/* Para hacerlo con "css grid" debemos trabajar con elemento padre siempre. Por ello como son los articulos los que tienen que acomodarse, y su padre es el div de clase contenedor, pero crearemos otra clase del mismo nivel para trabajar con ellos "dos-columnas". */


@media (min-width: 768px) { /* Pantalla PC o m√°s */
    .dos-columnas
    {
        display: grid;

        grid-template-columns: 50% 50%; 
        
        /* Siempre calcular que la suma sea en base a un 100% total. Si ponemos mas se saldra de cuadro. */

        /* Puede expresarse tambien como: */

        grid-template-columns: repeat(2, 50%);
        
        /* O: grid-template-columns: 2, 1fr; sino tambien:*/

        grid-template-columns: 1fr 1fr;

        /* Hay varias formas de dar sentencia a un mismo comportamiento. Aclaracion: Como se dan varias intrucciones equivalentes, siempre toma la ultima, por la compilacion en cascada. */

        column-gap: 2rem;
    }
}